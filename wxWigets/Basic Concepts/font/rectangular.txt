#include "wx/wx.h"
#include "iostream"
using namespace std;

class MyFrame : public wxFrame{
   public:
       MyFrame();
       ~MyFrame();
    private:
       void OnPaint(wxPaintEvent& event);
       void OnMouseEvent(wxMouseEvent &event);
       DECLARE_EVENT_TABLE()
};

class MyApp : public wxApp
{
    public:
       MyApp();
       ~MyApp();
       virtual bool OnInit();
    private:
       MyFrame* m_frame = NULL;
};

BEGIN_EVENT_TABLE(MyFrame, wxFrame)
	
    EVT_LEFT_DOWN(MyFrame::OnMouseEvent)

END_EVENT_TABLE()

MyFrame::MyFrame() : wxFrame(nullptr,wxID_ANY,"Rectangle",wxPoint(30,30),wxSize(800,600))
{
    OnPaint(wxPaintEvent& event);
}

void MyFrame::OnMouseEvent(wxMouseEvent & event)
{
    if (event.LeftDown()) {
        
        const wxPoint pt = wxGetMousePosition();
        int mouseX = pt.x;
        int mouseY = pt.y;

        cout<<"x1: "<<mouseX<<endl;
        cout<<"y1: "<<mouseY<<endl;
        if (HasCapture())
        {
        ReleaseMouse();
            const wxPoint pt2 = wxGetMousePosition();
            int mouseX2 = pt2.x;
            int mouseY2 = pt2.y;

            cout<<"x2: "<<mouseX2<<endl;
            cout<<"y2: "<<mouseY2<<endl;
        }/////////////////////////////

   


        /////////////////////////
        
    }
}
bool MyApp :: OnInit()
{
    wxInitAllImageHandlers() ;
    void handlerFuncName(wxMouseEvent& event);
   m_frame = new MyFrame();
   m_frame->Show();
   return true;
}
wxIMPLEMENT_APP(MyApp);



MyFrame::~MyFrame()
{

}

MyApp::MyApp()
{

}

MyApp::~MyApp()
{

}

void MyFrame :: OnPaint(wxPaintEvent& event)
{
  
    wxPaintDC dc(this);
    dc.SetPen(*wxBLACK_PEN);
    dc.SetBrush(*wxRED_BRUSH);
    wxSize sz = GetClientSize();
    wxCoord w = 500, h = 50;
    int x = wxMax(0,(sz.x-w)/2);
    int y = wxMax(0,(sz.y - h)/2);
    wxRect recToDraw(x,y,w,h);
    dc.DrawRectangle(recToDraw);
}